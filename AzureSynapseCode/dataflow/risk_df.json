{
	"name": "risk_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_pgmp_rfs_db",
						"type": "LinkedServiceReference"
					},
					"name": "getSourceData"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_pgmp_rfs_db",
						"type": "LinkedServiceReference"
					},
					"name": "insertTable"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'SELECT \\n    C.CNTRCT_DIM_UID,\\n    C.CNTRCT_NM AS CONTRACT,\\n    HFCT.PROC_DIM_UID AS UNIQUE_ID,\\n    PROC.CLNT_REF_NUM AS CLIENT_REFERENCE,\\n    PROC.PROC_DSPLY_ID AS DISPLAY_ID,\\n    ZACNTRCT.GLBL_BUY_GRP_ID,\\n    PARENT_PROC.PROC_DIM_UID AS PARENT_UNIQUE_ID,\\n    PARENT_PROC.PROC_DSPLY_ID AS PARENT_DISPLAY_ID,\\n    PARENT_PROC.TITLE_TXT AS PARENT_TITLE,\\n    PROC.TITLE_TXT AS PROC_TITLE,\\n    INITWDD.WKFLW_DEF_ID,\\n    INITWDD.DESC AS INIT_WKFLW_DEF_ID_DESCR,\\n    PROC.PROC_DESC AS PROC_DESCRIPTION,\\n    WKFLW.WKFLW_DEF_ID AS CURRENT_WORKFLOW,\\n    WKFLW_STEP.WKFLW_STEP_DEF_ID AS CURRENT_WKFLW_STEP,\\n    WKFLW_STEP.WKFLW_STEP_SEQ_NUM AS CURRENT_STEP_SEQ,\\n    WKFLW_STEP.WKFLW_STEP_DESC AS STEP_DESCRIPTION,\\n    ST.STATE_TITLE_TXT STATE_DESC,\\n    STATUS.STAT_IBM_DESC AS STATUS_DESC,\\n    decrypt_char(ASSGNTO.CONCAT_NM_LOGIN,MIS_REP_REF.MIS_REP_REF_CD) AS ASSIGNED_TO,\\n    AUDIENCE.ADNC_TXT AS AUDIENCE,\\n    P.PRIORITY_TXT,\\n    COND.COND_TXT AS CONDITION,\\n    COALESCE(RGN.REGION,GEO.KYNDRYL_RGN) AS REGION,\\n    decrypt_char(PROC.RQSTR_TXT,MIS_REP_REF.MIS_REP_REF_CD) AS REQUESTOR,\\n    decrypt_char(CREATOR.CONCAT_NM_LOGIN,MIS_REP_REF.MIS_REP_REF_CD) AS CREATED_BY,\\n    HFCT.SRC_CRETD_TMS AS CREATED_DATE,\\n    HFCT.SRC_UPDTD_TMS AS LAST_UPDATED,\\n    FCT.RISK_RSPNS_DUE_DT AS RISK_RESPONSE_DUE_DATE,\\n    FCT.RVSD_RISK_RSPNS_DUE_DT AS REVISED_RISK_RESPONSE_DUE_DATE,\\n    DAYS(NVL(FCT.RVSD_RISK_RSPNS_DUE_DT,FCT.RISK_RSPNS_DUE_DT)) - DAYS((CURRENT_TIMESTAMP - CURRENT_TIMEZONE) + AF.TZ HOURS) AS DUE_IN_DAY_CNT,\\n    CASE WHEN DAYS(NVL(FCT.RVSD_RISK_RSPNS_DUE_DT,FCT.RISK_RSPNS_DUE_DT)) - DAYS((CURRENT_TIMESTAMP - CURRENT_TIMEZONE) + AF.TZ HOURS) < 0 THEN \\'Y\\' ELSE \\'N\\' END AS OVERDUE,\\n    HFCT.CMPLTD_DT AS COMPLETION_DATE,\\n    PROC.CMPLTD_RSN_TXT AS COMPLETION_REASON,\\n    GEO.SRGNCTRY_NM AS COUNTRY,\\n    RISKSRC.RISK_SRC_TXT AS RISK_SOURCE,\\n    RISK.RISK_REM_TXT AS REMARKS,\\n    RISK.ORGNTG_ORGNZN_TXT AS ORIGINATING_ORG,\\n    decrypt_char(RISK.RISK_OWNR_TXT,MIS_REP_REF.MIS_REP_REF_CD) AS RISK_OWNER,\\n    FCT.PRBBLTY_NUM AS PROBABILITY,\\n    CASE \\n        WHEN FCT.PROBABILITY_SMPL =  \\'Z\\' THEN \\'10\\' \\n        WHEN FCT.PROBABILITY_SMPL =  \\'D\\' THEN \\'25\\' \\n        WHEN FCT.PROBABILITY_SMPL =  \\'C\\' THEN \\'50\\' \\n        WHEN FCT.PROBABILITY_SMPL =  \\'S\\' THEN \\'75\\' \\n    END AS PROBABILITY_SMPL ,\\n    FCT.IMPCT_CD AS IMPACT,\\n    RISK.MTGTN_RSPNS_PLAN_TXT AS RESPONSE_PLAN,\\n    CRNCY.CRNCY_NM AS LOCAL_CURRENCY,\\n    FCT.IMPCT_AMT AS IMPACT_AMOUNT_LOCAL_CURRENCY,\\n    RISK.GS_RISK_ID ,\\n    CASE \\n        WHEN RISK.BUS_CNTRL_RISK_IND=\\'Y\\' THEN \\'YES\\' \\n        WHEN RISK.BUS_CNTRL_RISK_IND=\\'N\\' THEN \\'NO\\' \\n    END AS BUSINESS_CONTROLS_RISK,\\n    RISK.WWRADB_REF_TXT AS WWBCIT_REFERENCE,\\n    FCT.RISK_ANLYSS_DUE_DT,\\n    FCT.RVSD_RISK_ANLYSS_DUE_DT,\\n    CASE \\n        WHEN RISK.RISK_RSPNS_TYPE_CD = \\'ACC\\' THEN \\'Accept/Retain\\' \\n        WHEN RISK.RISK_RSPNS_TYPE_CD = \\'AVO\\' THEN \\'Avoid\\' \\n        WHEN RISK.RISK_RSPNS_TYPE_CD = \\'CON\\' THEN \\'Contain/Reduce\\' \\n        WHEN RISK.RISK_RSPNS_TYPE_CD = \\'INS\\' THEN \\'Use Insurance\\'  \\n        WHEN RISK.RISK_RSPNS_TYPE_CD = \\'XFR\\' THEN \\'Transfer\\' \\n        WHEN RISK.RISK_RSPNS_TYPE_CD = \\'RES\\' THEN \\'Use Risk Reserve\\' \\n        ELSE RISK.RISK_RSPNS_TYPE_CD \\n    END AS RISK_RSPNS_TYPE_CD,\\n    RISK.RISK_OCCURRED_CD,\\n    RISK.RISK_CLOSE_RSN_TXT,\\n    SRC.SRC_SYS_CD,\\n    \\'\\' AS LEGACY_UNIQUE_ID,\\n    \\'\\' AS LEGACY_DISPLAYED_ID,\\n    TRIM(INOTES.NOTES_DESC) AS LATEST_IBM_ONLY_NOTE,\\n    TRIM(PNOTES.NOTES_DESC) AS LATEST_IBM_AND_CLIENT_NOTE,\\n    CTYPE.CNTRCT_TYPE_DESC,\\n    PTYPE.PROC_TYPE_ID,\\n    PTYPE.PROC_TYPE_DESC,\\n    ONHOLD.ON_HOLD_CD,\\n    HFCT.WITHDRWN_DIM_UID,\\n    HFCT.WITHDRWN_DT,\\n    HFCT.ORGNZN_DIM_UID,\\n    DATAIBM.IBM_ONLY_TEXT_1,\\n    DATAIBM.IBM_ONLY_TEXT_2,\\n    DATAIBM.IBM_ONLY_TEXT_3,\\n    DATAIBM.IBM_ONLY_TEXT_4,\\n    DATAIBM.IBM_ONLY_TEXT_5,\\n    DATAIBM.IBM_ONLY_TEXT_6,\\n    DATAIBM.IBM_ONLY_DATE_1,\\n    DATAIBM.IBM_ONLY_DATE_2,\\n    DATAIBM.IBM_ONLY_DATE_3,\\n    DATAIBM.IBM_ONLY_DATE_4,\\n    DATAIBM.IBM_ONLY_DATE_5,\\n    DATAIBM.IBM_ONLY_DATE_6,\\n    DATAPBLIC.PUBLIC_TEXT_1,\\n    DATAPBLIC.PUBLIC_TEXT_2,\\n    DATAPBLIC.PUBLIC_TEXT_3,\\n    DATAPBLIC.PUBLIC_TEXT_4,\\n    DATAPBLIC.PUBLIC_TEXT_5,\\n    DATAPBLIC.PUBLIC_TEXT_6,\\n    DATAPBLIC.PUBLIC_DATE_1,\\n    DATAPBLIC.PUBLIC_DATE_2,\\n    DATAPBLIC.PUBLIC_DATE_3,\\n    DATAPBLIC.PUBLIC_DATE_4,\\n    DATAPBLIC.PUBLIC_DATE_5,\\n    DATAPBLIC.PUBLIC_DATE_6,\\n    SOO.STAT_OF_ORGNZN_DESC AS STATE_OF_ORGANIZATION,\\n    SCTR.SCTR_NM,\\n    ZACNTRCT.CLIENT_UNIT_NM AS CLIENT_UNIT\\n\\nFROM \\n\\n    PGMPDM.RISK_DIM RISK\\n    INNER JOIN PGMPDM.PROC_HEADR_FCT HFCT ON HFCT.PROC_DIM_UID = RISK.RISK_DIM_UID AND HFCT.ROW_STAT_CD <> \\'D\\'\\n    INNER JOIN PGMPDM.PROC_TYPE_DIM PTYPE ON PTYPE.PROC_TYPE_DIM_UID = HFCT.PROC_TYPE_DIM_UID AND PTYPE.ROW_STAT_CD <> \\'D\\'\\n    INNER JOIN PGMPDM.PROC_DIM PROC ON PROC.PROC_DIM_UID = HFCT.PROC_DIM_UID AND PROC.ROW_STAT_CD <> \\'D\\'\\n    INNER JOIN PGMPDM.CNTRCT_DIM C ON C.CNTRCT_DIM_UID = PROC.CNTRCT_DIM_UID AND C.ROW_STAT_CD <> \\'D\\'\\n    INNER JOIN PGMPDM.CNTRCT_TYPE_DIM CTYPE ON CTYPE.CNTRCT_TYPE_DIM_UID = C.CNTRCT_TYPE_DIM_UID AND CTYPE.ROW_STAT_CD <> \\'D\\'\\n    INNER JOIN PGMPDM.WKFLW_DEF_DIM INITWDD ON INITWDD.WKFLW_DEF_DIM_UID = HFCT.INIT_WKFLW_DEF_DIM_UID AND INITWDD.ROW_STAT_CD <> \\'D\\'\\n    INNER JOIN PGMPDM.WKFLW_DEF_DIM WKFLW ON WKFLW.WKFLW_DEF_DIM_UID = HFCT.WKFLW_DEF_DIM_UID AND WKFLW.ROW_STAT_CD <> \\'D\\'\\n    INNER JOIN PGMPDM.WKFLW_STEP_DEF_DIM WKFLW_STEP ON WKFLW_STEP.WKFLW_STEP_DEF_DIM_UID = HFCT.WKFLW_STEP_DEF_DIM_UID AND WKFLW_STEP.ROW_STAT_CD <> \\'D\\' \\n    INNER JOIN PGMPDM.STATE_DIM ST ON ST.STATE_DIM_UID = HFCT.STATE_DIM_UID AND ST.ROW_STAT_CD <> \\'D\\'\\n    INNER JOIN PGMPDM.PROC_STEP_DAT_DIM PSD ON PROC.PROC_DIM_UID = PSD.PROC_DIM_UID AND PROC.CURR_PROC_STEP_DAT_DIM_UID = PSD.PROC_STEP_DAT_DIM_UID AND PSD.ROW_STAT_CD <> \\'D\\'\\n    INNER JOIN PGMPDM.GEO_DIM GEO ON GEO.GEO_DIM_UID = HFCT.GEO_DIM_UID AND GEO.ROW_STAT_CD <> \\'D\\'\\n    INNER JOIN PGMPDM.MISC_FCT FCT ON FCT.PROC_HEADR_FCT_UID = HFCT.PROC_HEADR_FCT_UID AND FCT.ROW_STAT_CD <> \\'D\\'\\n    INNER JOIN PGMPDM.SRC_SYS_DIM SRC ON SRC.SRC_SYS_DIM_UID = HFCT.SRC_SYS_DIM_UID AND SRC.ROW_STAT_CD <> \\'D\\'\\n    INNER JOIN PGMPDM.SCTR_DIM SCTR ON SCTR.SCTR_DIM_UID = C.SCTR_DIM_UID AND SCTR.ROW_STAT_CD <> \\'D\\'\\n    LEFT OUTER JOIN PGMPDM.STAT_DIM STATUS ON STATUS.STAT_DIM_UID = HFCT.STAT_DIM_UID AND STATUS.ROW_STAT_CD <> \\'D\\'\\n    LEFT OUTER JOIN PGMPDM.MISC_REP_REF MIS_REP_REF ON MIS_REP_REF_UID = 3\\n    LEFT OUTER JOIN PGMPDM.USER_DIM ASSGNTO ON ASSGNTO.USER_ID = PSD.ASSGN_TO_NUM AND ASSGNTO.ROW_STAT_CD <> \\'D\\'\\n    LEFT OUTER JOIN PGMPDM.ADNC_DIM AUDIENCE ON AUDIENCE.ADNC_CD = PROC.ADNC_CD\\n    LEFT OUTER JOIN PGMPDM.PRIORITY_DIM P ON P.PRIORITY_NUM = PROC.PRIORTY_NUM\\n    LEFT OUTER JOIN PGMPDM.COND_DIM COND ON COND.COND_CD = PROC.CNDTN_CD\\n    LEFT OUTER JOIN APPFUN.PROC_REGION_V RGN ON RGN.PROC_ID = PROC.PROC_DIM_UID AND RGN.INTERNAL_VAL <> \\'NONE\\'\\n    LEFT OUTER JOIN PGMPDM.USER_DIM CREATOR ON CREATOR.USER_DIM_UID = HFCT.CRETD_BY_USER_DIM_UID AND CREATOR.ROW_STAT_CD <> \\'D\\'\\n    LEFT OUTER JOIN PGMPDM.NOTES_DIM INOTES ON INOTES.PROC_DIM_UID = PROC.PROC_DIM_UID AND INOTES.ROW_STAT_CD <> \\'D\\' AND INOTES.NOTE_TYPE_CD = \\'I\\' AND INOTES.LATEST_NOTE_IND = \\'Y\\'\\n    LEFT OUTER JOIN PGMPDM.NOTES_DIM PNOTES ON PNOTES.PROC_DIM_UID = PROC.PROC_DIM_UID AND PNOTES.ROW_STAT_CD <> \\'D\\' AND PNOTES.NOTE_TYPE_CD = \\'P\\' AND PNOTES.LATEST_NOTE_IND = \\'Y\\'\\n    LEFT OUTER JOIN PGMPDM.ON_HOLD_DIM ONHOLD ON ONHOLD.ON_HOLD_DIM_UID = HFCT.ON_HOLD_DIM_UID AND ONHOLD.ROW_STAT_CD <> \\'D\\'\\n    LEFT OUTER JOIN PGMPDM.ON_HOLD_RSN_DIM HOLDRSN ON HOLDRSN.ON_HOLD_RSN_ID = PROC.ON_HOLD_RSN_ID AND HOLDRSN.ROW_STAT_CD <> \\'D\\'\\n    LEFT OUTER JOIN PGMPDM.CRNCY_DIM CRNCY ON CRNCY.CRNCY_DIM_UID = FCT.LOCAL_CRNCY_DIM_UID AND CRNCY.ROW_STAT_CD <> \\'D\\'\\n    LEFT OUTER JOIN PGMPDM.PROC_DIM PARENT_PROC ON PARENT_PROC.PROC_DIM_UID = PROC.PARNT_PROC_ID AND PARENT_PROC.ROW_STAT_CD <> \\'D\\'\\n    LEFT OUTER JOIN PGMPDM.RISK_SRC_DIM RISKSRC ON RISKSRC.RISK_SRC_DIM_CD = RISK.RISK_SRC_IND AND RISKSRC.ROW_STAT_CD <> \\'D\\'\\n    LEFT OUTER JOIN PGMPDM.PROC_CSTM_DATA_PUBLIC_DIM DATAPBLIC ON DATAPBLIC.PROC_DIM_UID = PROC.PROC_DIM_UID\\n    LEFT OUTER JOIN PGMPDM.PROC_CSTM_DATA_IBM_CLIENT_DIM DATAIBM ON DATAIBM.PROC_DIM_UID = PROC.PROC_DIM_UID\\n    LEFT OUTER JOIN PGMPDM.ORG_CNTRCT_MAP_DIM ORG_MAP ON ORG_MAP.CNTRCT_DIM_UID = C.CNTRCT_DIM_UID\\n    LEFT OUTER JOIN PGMPDM.ORGNZN_DIM ORG ON ORG.ORGNZN_DIM_UID = ORG_MAP.ORGNZN_DIM_UID\\n    LEFT OUTER JOIN PGMPDM.STAT_OF_ORGNZN_DIM SOO ON SOO.STAT_OF_ORGNZN_DIM_UID = ORG.STAT_OF_ORGNZN_DIM_UID\\n    LEFT OUTER JOIN PGMPDM.CNTRCT_TZ_V AF ON C.CNTRCT_DIM_UID = AF.CNTRCT_DIM_UID\\n    LEFT OUTER JOIN PGMPDM.ZAUX_CNTRCT_GLBL_BUY_GRP_MAP ZACNTRCT ON ZACNTRCT.CNTRCT_DIM_UID = C.CNTRCT_DIM_UID \\n\\nWHERE \\n    RISK.ROW_STAT_CD <> \\'D\\' \\n    AND PTYPE.PROC_TYPE_ID IN (\\'RISK\\', \\'RISKNEW\\') \\n    AND PROC.ADNC_ACCSS_CD <> \\'C\\' \\n    AND HFCT.DELD_DT IS NULL \\n    AND SRC.SRC_SYS_CD = \\'PGMP\\'\\n\\n\\n\\n\\n',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> getSourceData",
				"getSourceData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'PGMPDM',",
				"     tableName: 'RISK_RPT',",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: false,",
				"     recreate: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> insertTable"
			]
		}
	}
}