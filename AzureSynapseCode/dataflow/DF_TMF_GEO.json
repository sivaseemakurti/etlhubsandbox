{
	"name": "DF_TMF_GEO",
	"properties": {
		"folder": {
			"name": "PGMP"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ln_rfs_pgmp",
						"type": "LinkedServiceReference"
					},
					"name": "TMFGEO"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dl_tgt_geo",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     limit: 100,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'with\\n     -- This sub query gets the limits of the data that will be processed\\n     FIL as (\\n          select\\n               ETL_EXCTN_ID\\n          from\\n               PGMPDM.[ZAUX_ETL_EXCTN]\\n          where\\n               IS_CURR_IND = \\'Y\\'\\n     ),\\n     \\n     -- This subquery gets the JOB ID. Returns -1 is the value is unknown\\n     JOB as (\\n          select\\n               coalesce(max(ETL_JOB_ID), -1) as ETL_JOB_ID\\n          from\\n               PGMPDM.ZAUX_ETL_JOBS\\n          where\\n               ETL_JOB_NM = \\'#DSJobName#\\'          \\n     ),\\n     \\n     -- This subquery gets the SRC_SYS_ID. Returns -1 is the value is unknown\\n     SYS as (\\n          select\\n               coalesce(max(SRC_SYS_DIM_UID), -1) as SRC_SYS_DIM_UID\\n          from\\n               PGMPDM.SRC_SYS_DIM\\n          where\\n               SRC_SYS_CD = \\'TMF\\'               \\n     )\\n     \\n     \\n\\n\\nselect\\n     G.GEO_DIM_UID,\\n     G.IOT_RGN_CD/*,\\n     G.IOT_RGN_NM,\\n     G.IMT_RGN_CD,\\n     G.IMT_SRGN_NM,\\n     G.SRGN_CD,\\n     G.SRGNCTRY_CD,\\n     G.SRGNCTRY_NM,\\n     G.IOTSORT_NUM,\\n     G.GEO_CD,\\n     G.GEO_TYP_CD,\\n     G.GMR_RGN_CD,\\n     G.GMR_RGN_NM,\\n     G.IOT_SHORT_NM,\\n     G.IMT_SHORT_NM,\\n     JOB.ETL_JOB_ID,\\n     FIL.ETL_EXCTN_ID,\\n     SYS.SRC_SYS_DIM_UID*/\\nfrom\\n     PGMPDM.GEO_DIM_TMF G\\n     left join\\n     JOB\\n     on 1 = 1\\n     left join\\n     FIL\\n     on 1 = 1\\n     left join\\n     SYS\\n     on 1 = 1',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> TMFGEO",
				"TMFGEO sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}